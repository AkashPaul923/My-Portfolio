[
    {
      "id": "P1",
      "projectName": "MicroMint",
      "projectImg": "https://i.ibb.co.com/JFKzLbHL/Screenshot-111.png",
      "mainTechnologyStack": ["Tailwind CSS","React.js", "Express", "MongoDB", "JWT", "FireBase", "Tanstack Query", "Axios"],
      "briefDescription": "MicroMint is the Micro Tasking and Earning Platform is designed to provide users with opportunities to complete small tasks and earn money. The platform accommodates 3 distinct roles: Worker, Buyer, and Admin. Each role is tailored with specific functionalities to ensure seamless task management, task creation, and platform administration.",
      "liveLink": "https://micromint-0.web.app/",
      "githubLinks": {
        "clientCodeLink": "https://github.com/AkashPaul923/MicroMint-Clint",
        "serverCodeLink": "https://github.com/AkashPaul923/MicroMint-Server"
      },
      "details": {
        "challengesFaced": [
          "Integrating Firebase authentication with custom error messages.",
          "Optimizing Tailwind CSS for dynamic component styling.",
          "Handling edge cases for product filtering and pagination."
        ],
        "currentLimitations": [
          "The search functionality is basic and does not support advanced filters.",
          "Content updates require manual GraphQL mutations.",
          "Animations are basic and could be more interactive."
        ],
        "improvementsPlanned": [
          "Implementing advanced search and filtering with MongoDB Atlas Search.",
          "Adding a caching layer using Redis to improve performance.",
          "Expanding unit tests to cover edge cases and error scenarios."
        ]
      }
    },
    {
      "id": "P2",
      "projectName": "ElectroSavvy",
      "projectImg": "https://i.ibb.co.com/qR23Z3Z/Electro-Savvy.png",
      "mainTechnologyStack": ["Tailwind CSS","React.js", "Express", "MongoDB", "JWT", "FireBase"],
      "briefDescription": "It's a service-sharing web application designed to provide users with a seamless experience for managing and sharing services. This platform allows users to perform key actions such as adding, updating, and deleting their own services, browsing services shared by others, booking services, and managing the statuses of booked services. My focus during development was on creating an intuitive and user-friendly interface to ensure smooth navigation and efficient service management for all users.",
      "liveLink": "https://electrosavvy-57a30.web.app",
      "githubLinks": {
        "clientCodeLink": "https://github.com/AkashPaul923/ElectroSavvy-clint",
        "serverCodeLink": "https://github.com/AkashPaul923/ElectroSavvy-server"
      },
      "details": {
        "challengesFaced": [
          "Structuring MongoDB schemas for nested comments efficiently.",
          "Handling rate-limiting for API endpoints to prevent abuse.",
          "Optimizing query performance for large datasets."
        ],
        "currentLimitations": [
          "The search functionality is basic and does not support advanced filters.",
          "No caching mechanism is implemented for frequent API requests."
        ],
        "improvementsPlanned": [
          "Implementing advanced search and filtering with MongoDB Atlas Search.",
          "Adding a caching layer using Redis to improve performance.",
          "Expanding unit tests to cover edge cases and error scenarios."
        ]
      }
    },
    {
      "id": "P3",
      "projectName": "MovieMatrix",
      "projectImg": "https://i.ibb.co.com/R4X6Qjt/Movie-Matrix.png",
      "mainTechnologyStack": ["Tailwind CSS","React.js", "Express", "MongoDB", "FireBase"],
      "briefDescription": "MovieMatrix is a user-friendly Movie Portal to simplify the process of exploring movies, viewing movie details, adding movies, and deleting movies while managing user favorites. It has a dynamic user interface, robust functionality, and seamless user experience.",
      "liveLink": "https://moviematrix-851d2.web.app",
      "githubLinks": {
        "clientCodeLink": "https://github.com/AkashPaul923/MovieMatrix-Clint",
        "serverCodeLink": "https://github.com/AkashPaul923/MovieMatrix-Server"
      },
      "details": {
        "challengesFaced": [
          "Integrating Firebase authentication with custom error messages.",
          "Optimizing Tailwind CSS for dynamic component styling.",
          "Handling edge cases for product filtering and pagination.",
          "Implementing advanced search and filtering with MongoDB Atlas Search."
        ],
        "currentLimitations": [
          "Content updates require manual GraphQL mutations.",
          "Animations are basic and could be more interactive."
        ],
        "improvementsPlanned": [
          "Implementing advanced search and filtering with MongoDB Atlas Search.",
          "Enhancing animations using libraries like Framer Motion.",
          "Improving Lighthouse scores for performance and accessibility."
        ]
      }
    }
]
  